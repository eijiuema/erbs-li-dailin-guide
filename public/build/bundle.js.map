{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/countapi-js/lib/index.js","../../src/components/CopiableText.svelte","../../src/components/Figure.svelte","../../src/components/quotes/Quote.svelte","../../src/components/quotes/Question.svelte","../../src/components/skills/Icon.svelte","../../src/components/skills/Skill.svelte","../../src/components/Modal.svelte","../../src/components/skills/SkillModal.svelte","../../src/components/skills/Combo.svelte","../../src/components/TextModal.svelte","../../src/components/TooltipText.svelte","../../src/components/Video.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const crossfetch = require('cross-fetch');\r\n\r\nconst BASE_API_PATH = \"https://api.countapi.xyz\";\r\nconst validPattern = /^[A-Za-z0-9_\\-.]{3,64}$/;\r\nconst validRegex = new RegExp(validPattern);\r\n\r\nconst validatePath = module.exports.validatePath = function(namespace, key) {\r\n    if(typeof key === \"undefined\") {\r\n        if(typeof namespace === \"undefined\") {\r\n            return Promise.reject(\"Missing key\");\r\n        }\r\n        key = namespace;\r\n        namespace = undefined;\r\n    }\r\n\r\n    function validName(name) {\r\n        return validRegex.test(name) || name === ':HOST:' || name === ':PATHNAME:';\r\n    }\r\n\r\n    return new Promise(function(resolve, reject) {\r\n        if(!validName(key)) {\r\n            reject(`Key must match ${validPattern}. Got '${namespace}'`);\r\n            return;\r\n        }\r\n        if(!validName(namespace) && typeof namespace !== \"undefined\" && namespace !== null) {\r\n            reject(`Namespace must match ${validPattern} or be empty. Got '${namespace}'`);\r\n            return;\r\n        }\r\n        \r\n        var path = '';\r\n        if(typeof namespace !== \"undefined\")\r\n            path += namespace + '/';\r\n        path += key;\r\n        \r\n        resolve({\r\n            path: path\r\n        });\r\n    });\r\n}\r\n\r\nconst validateTuple = module.exports.validateTuple = function(namespace, key, value) {\r\n    if(typeof value === \"undefined\") {\r\n        if(typeof key === \"undefined\") {\r\n            return Promise.reject(\"Missing key or value\");\r\n        }\r\n        value = key;\r\n        key = undefined;\r\n    }\r\n    if(typeof value !== \"number\") {\r\n        return Promise.reject(\"Value is NaN\");\r\n    }\r\n\r\n    return validatePath(namespace, key).then(function(result) {\r\n        return Object.assign({}, { value: value }, result);\r\n    });\r\n}\r\n\r\nfunction finalize(res) {\r\n    const valid_responses = [200, 400, 403, 404];\r\n    if (valid_responses.includes(res.status)) {\r\n        return res.json().then(function(json) {\r\n            if(res.status == 400)\r\n                return Promise.reject(json.error);\r\n            return Object.assign({}, {\r\n                status: res.status,\r\n                path: res.headers.get('X-Path')\r\n            }, json);\r\n        });\r\n    }\r\n    return Promise.reject(\"Response from server: \" + res.status);\r\n}\r\n\r\nfunction queryParams(params) {\r\n    return Object.keys(params || {})\r\n        .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\r\n        .join('&');\r\n}\r\n\r\nmodule.exports.get = function(namespace, key) {\r\n    return validatePath(namespace, key).then(function(result) {\r\n        return crossfetch(`${BASE_API_PATH}/get/${result.path}`).then(finalize);\r\n    });\r\n};\r\n\r\nmodule.exports.set = function(namespace, key, value) {\r\n    return validateTuple(namespace, key, value).then(function(result) {\r\n        return crossfetch(`${BASE_API_PATH}/set/${result.path}?value=${result.value}`).then(finalize);\r\n    });\r\n};\r\n\r\nmodule.exports.update = function(namespace, key, amount) {\r\n    return validateTuple(namespace, key, amount).then(function(result) {\r\n        return crossfetch(`${BASE_API_PATH}/update/${result.path}?amount=${result.value}`).then(finalize);\r\n    });\r\n};\r\n\r\nmodule.exports.hit = function(namespace, key) {\r\n    return validatePath(namespace, key).then(function(result) {\r\n        return crossfetch(`${BASE_API_PATH}/hit/${result.path}`).then(finalize);\r\n    });\r\n};\r\n\r\nmodule.exports.info = function(namespace, key) {\r\n    return validatePath(namespace, key).then(function(result) {\r\n        return crossfetch(`${BASE_API_PATH}/info/${result.path}`).then(finalize);\r\n    });\r\n};\r\n\r\nmodule.exports.create = function(options) {\r\n    var params = queryParams(options);\r\n    return crossfetch(`${BASE_API_PATH}/create${params.length > 0 ? '?' + params : ''}`).then(finalize);\r\n};\r\n\r\nmodule.exports.stats = function() {\r\n    return crossfetch(`${BASE_API_PATH}/stats`).then(finalize);\r\n};\r\n\r\nmodule.exports.visits = function(page) {\r\n    return this.hit(':HOST:', page ? page : ':PATHNAME:');\r\n};\r\n\r\nmodule.exports.event = function(name) {\r\n    return this.hit(':HOST:', name);\r\n};","<script>\r\n  export let text;\r\n</script>\r\n\r\n<span\r\n  on:click={window.prompt(\"Copiar: Ctrl+C, Enter\", text)}\r\n  title=\"Clique para copiar\"\r\n>\r\n  <i>{text}</i>\r\n</span>\r\n\r\n<style>\r\n  span {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n","<script>\r\n  export let src;\r\n  export let caption;\r\n  export let height = \"auto\";\r\n  export let width = \"auto\";\r\n</script>\r\n\r\n<figure style=\"--width: {width}; --height: {height};\">\r\n  <img {src} alt={caption} />\r\n  {#if caption}\r\n    <figcaption>\r\n      {caption}\r\n    </figcaption>\r\n  {/if}\r\n</figure>\r\n\r\n<style>\r\n  figure {\r\n    display: flex;\r\n    flex-flow: column;\r\n    padding: 5px;\r\n    margin: auto;\r\n  }\r\n\r\n  img {\r\n    width: var(--width);\r\n    height: var(--height);\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n  }\r\n\r\n  figcaption {\r\n    font: italic smaller sans-serif;\r\n    padding-top: 8px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n","<script>\r\n  export let color;\r\n  export let author;\r\n</script>\r\n\r\n<blockquote style=\"color: {color}\">\r\n  <p>\r\n    <slot />\r\n  </p>\r\n  {#if author}\r\n    <small class=\"author\">\r\n      {author}\r\n    </small>\r\n  {/if}\r\n</blockquote>\r\n\r\n<style>\r\n  blockquote {\r\n    width: 80%;\r\n    text-align: center;\r\n    margin: auto auto;\r\n  }\r\n  p::before {\r\n    content: \"– \";\r\n  }\r\n  .author {\r\n    color: white;\r\n    display: block;\r\n    text-align: right;\r\n  }\r\n</style>\r\n","<script>\r\n  import Quote from \"./Quote.svelte\";\r\n</script>\r\n\r\n<Quote color=\"#fccd33\" {...$$props}>\r\n  <slot />\r\n</Quote>\r\n","<script>\r\n  export let src;\r\n  export let key = \"\";\r\n  export let size = 32;\r\n</script>\r\n\r\n<span class=\"container\" style=\"--size: {size}px\">\r\n  <img {src} alt={key} />\r\n  {#if key}\r\n    <span class=\"key\">{key}</span>\r\n  {/if}\r\n</span>\r\n\r\n<style>\r\n  .container {\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    height: var(--size);\r\n  }\r\n  img {\r\n    height: 100%;\r\n  }\r\n  .key {\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: #fff;\r\n    padding: 0.1em;\r\n    width: calc(var(--size) / 3);\r\n    height: calc(var(--size) / 3);\r\n    font-size: calc(var(--size) / 3.75);\r\n    line-height: calc(var(--size) / 3);\r\n    font-weight: 700;\r\n    content: attr(data-key);\r\n  }\r\n</style>\r\n","<script>\r\n  import * as skills from \"./skills.json\";\r\n  import Icon from \"./Icon.svelte\";\r\n  export let id;\r\n  let skill = skills[id];\r\n</script>\r\n\r\n<div class=\"skill\">\r\n  <Icon src={skill.icon} size={48} key={skill.key} />\r\n  <span class=\"name\">{skill.name}</span>\r\n  {#each skill.description as p}\r\n    <p>{p}</p>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .skill {\r\n    padding: 1em;\r\n    text-align: left;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    min-width: 300px;\r\n  }\r\n\r\n  .name {\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n}\r\n</style>\r\n","<script>\r\n  export let show = false;\r\n\r\n  function open() {\r\n    show = true;\r\n  }\r\n\r\n  function close() {\r\n    show = false;\r\n  }\r\n</script>\r\n\r\n<span on:click={open} class=\"button\">\r\n  <slot name=\"button\" />\r\n</span>\r\n{#if show}\r\n  <div class=\"overlay\" on:click={close} />\r\n  <div class=\"modal\">\r\n    <div class=\"close\" on:click={close}>✗</div>\r\n    <slot name=\"modal\" />\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1000;\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n  }\r\n  .modal {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #25292d;\r\n    border-radius: 8px;\r\n    padding: 36px;\r\n    z-index: 2000;\r\n  }\r\n  .close {\r\n    position: absolute;\r\n    width: 28px;\r\n    height: 28px;\r\n    padding: 0;\r\n    top: 12px;\r\n    right: 12px;\r\n    text-align: center;\r\n  }\r\n\r\n  .close:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .button:hover {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n","<script>\r\n  import Icon from \"./Icon.svelte\";\r\n  import Tooltip from \"../Tooltip.svelte\";\r\n  import Skill from \"./Skill.svelte\";\r\n  import * as skills from \"./skills.json\";\r\n  import Modal from \"../Modal.svelte\";\r\n\r\n  export let id;\r\n  export let size;\r\n\r\n  let skill = skills[id];\r\n</script>\r\n\r\n<span class=\"skill\">\r\n  <Modal>\r\n    <Icon slot=\"button\" src={skill.icon} key={skill.key} {size} />\r\n    <Skill {id} slot=\"modal\" />\r\n  </Modal>\r\n</span>\r\n\r\n<style>\r\n  .skill {\r\n    font-size: 20px;\r\n    text-transform: none;\r\n    position: relative;\r\n    color: #fff;\r\n    vertical-align: middle;\r\n  }\r\n</style>\r\n","<script>\r\n  import SkillModal from \"./SkillModal.svelte\";\r\n\r\n  export let skills = [];\r\n  export let size;\r\n</script>\r\n\r\n<div class=\"combo\">\r\n  {#each skills as skill}\r\n    <div class=\"skill\">\r\n      <SkillModal {size} id={skill} />\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .combo {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .skill {\r\n    margin-bottom: 0.5em;\r\n  }\r\n\r\n  .skill:not(:last-child)::after {\r\n    content: \"→\";\r\n  }\r\n</style>\r\n","<script>\r\n  import Modal from \"./Modal.svelte\";\r\n  export let text;\r\n</script>\r\n\r\n<Modal>\r\n  <span slot=\"button\" class=\"text\">\r\n    {text}\r\n  </span>\r\n  <slot slot=\"modal\" />\r\n</Modal>\r\n\r\n<style>\r\n  .text {\r\n    border-bottom: 1px solid #fccd33;\r\n  }\r\n</style>\r\n","<script>\r\n  export let text;\r\n  export let tip;\r\n</script>\r\n\r\n<span class=\"container\">\r\n  <span class=\"hoverable\">\r\n    {text}\r\n  </span>\r\n  <small class=\"tip\">{tip}</small>\r\n</span>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n  }\r\n  .tip {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    visibility: hidden;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    padding: 8px;\r\n    border-bottom-right-radius: 8px;\r\n    z-index: 1000;\r\n  }\r\n  .container:hover .tip {\r\n    visibility: visible;\r\n  }\r\n  .hoverable {\r\n    border-bottom: 1px dashed white;\r\n  }\r\n</style>\r\n","<script>\r\n  export let src;\r\n  export let controls = false;\r\n  export let autoplay = false;\r\n  export let muted = true;\r\n  export let loop = true;\r\n  export let width = \"320px\";\r\n  export let height = \"auto\";\r\n  export let caption;\r\n  export let preload = true;\r\n\r\n  let video;\r\n  let loading = true;\r\n  let paused = !autoplay;\r\n\r\n  function toggleVideo() {\r\n    if (paused) {\r\n      video.play();\r\n    } else {\r\n      video.pause();\r\n    }\r\n    paused = !paused;\r\n  }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-media-has-caption -->\r\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n<figure style=\"width: {width}\">\r\n  <div class=\"video\" on:click={toggleVideo}>\r\n    <div class=\"overlay\" class:paused>\r\n      {#if loading}\r\n        <!-- svelte-ignore a11y-missing-attribute -->\r\n        <img src=\"resources/loading.svg\" />\r\n      {:else if paused}\r\n        <span class=\"text\">▶</span>\r\n      {/if}\r\n    </div>\r\n    <video\r\n      {src}\r\n      {controls}\r\n      {autoplay}\r\n      {loop}\r\n      {muted}\r\n      {width}\r\n      {height}\r\n      {preload}\r\n      on:canplay={() => (loading = false)}\r\n      bind:this={video}\r\n    />\r\n  </div>\r\n  {#if caption}\r\n    <figcaption>\r\n      {caption}\r\n    </figcaption>\r\n  {/if}\r\n</figure>\r\n\r\n<style>\r\n  .video {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    position: relative;\r\n    cursor: pointer;\r\n  }\r\n  video {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n  .overlay {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n  }\r\n  .overlay.paused {\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n  }\r\n  figure {\r\n    display: flex;\r\n    flex-flow: column;\r\n    padding: 5px;\r\n    margin: 1em auto;\r\n  }\r\n\r\n  figcaption {\r\n    font: italic smaller sans-serif;\r\n    padding-top: 8px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n","<script>\n  import countapi from \"countapi-js\";\n  import CopiableText from \"./components/CopiableText.svelte\";\n  import Figure from \"./components/Figure.svelte\";\n  import Answer from \"./components/quotes/Answer.svelte\";\n  import Question from \"./components/quotes/Question.svelte\";\n  import Combo from \"./components/skills/Combo.svelte\";\n  import HoverableSkill from \"./components/skills/SkillModal.svelte\";\n  import Skill from \"./components/skills/Skill.svelte\";\n  import TextModal from \"./components/TextModal.svelte\";\n  import Tooltip from \"./components/Tooltip.svelte\";\n  import TooltipText from \"./components/TooltipText.svelte\";\n  import Video from \"./components/Video.svelte\";\n  countapi.visits().then((result) => console.log(result.value));\n</script>\n\n<div class=\"container\">\n  <h1>\"....Do I really have to do this?\"</h1>\n  <Figure\n    class=\"center\"\n    height=\"50vh\"\n    src=\"resources/header/Tourist_Li_Dailin.png\"\n  />\n  <section>\n    <h1>Disclaimer</h1>\n    <p>\n      Pra quem não me conhece, meu nick é uema, e sou mono Li Dailin desde\n      novembro de 2020, não posso afirmar que sou a melhor Li Dailin do\n      servidor, mas provavelmente a com mais experiência no jogo.\n    </p>\n    <p>\n      Esse guia está longe de completo, e será atualizado sempre que eu tiver\n      tempo.\n    </p>\n    <p>\n      Se encontrar algum erro, tiver algum feedback, dúvida ou sugestão, pode\n      falar comigo no Discord: <CopiableText text=\"uema#2118\" />\n    </p>\n  </section>\n  <section>\n    <h1>Objetivo</h1>\n    <p>\n      O intuito desse guia, é passar um conhecimento geral sobre a personagem,\n      fugindo um pouco de coisas que variam com atualizações, como rotas e\n      builds.\n    </p>\n    <Question>Então esse guia vai ensinar só o básico?</Question>\n    <Answer\n      >Não se engane, apesar de não abordar rotas, vou me aprofundar bastante.</Answer\n    >\n    <p>\n      A ideia é passar conhecimento teórico o suficiente pra que você entenda o\n      personagem, e seja capaz de construir e avaliar jogadas e rotas por conta\n      própria, independente do patch.\n    </p>\n  </section>\n  <section>\n    <h1>Introdução</h1>\n    <p>\n      Li Dailin é uma personagem conhecida pela sua mobilidade e por causar\n      bastante dano em pouco tempo.\n    </p>\n    <Question author=\"DE DAILIN, Novato\">\n      Ok, mas por que minha Li Dailin não dá dano?!\n    </Question>\n    <iframe\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube-nocookie.com/embed/r1_iuvZxx4Y\"\n      title=\"YouTube video player\"\n      frameborder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowfullscreen\n    />\n    <p>\n      Pra causar dano com ela, é necessário entender e utilizar muito bem suas\n      skills, que apesar de simples têm diversas nuâncias e pequenos detalhes\n      que podem alterar e muito o seu potencial de dano.\n    </p>\n  </section>\n  <section>\n    <h1>Habilidades</h1>\n    <section>\n      <Skill id=\"T\" />\n      <p>\n        Essa é a principal habilidade da Li Dailin. É o bom aproveitamento dela\n        que vai definir quanto de dano você pode causar.\n      </p>\n      <p>\n        Se você tiver\n        <TextModal text=\"40 CAS ou mais\">\n          <Figure\n            height=\"48px\"\n            src=\"resources/habilidades/passiva/barra.png\"\n            caption=\"Use o traço branco em baixo da sua barra de mana como referência\"\n          />\n        </TextModal>\n        ao usar uma habilidade:\n      </p>\n      <ol>\n        <li>\n          Você consumirá 40 de CAS <small\n            >(exceto <HoverableSkill id=\"W\" />)</small\n          >.\n        </li>\n        <li>\n          A habilidade vai ganhar um efeito adicional <small\n            >(exceto <HoverableSkill id=\"W\" />)</small\n          >.\n        </li>\n        <li>\n          <TooltipText\n            text=\"Seu próximo ataque normal sairá duas vezes.\"\n            tip=\"O segundo ataque tem dano reduzido, mas aumenta conforme o nível da\n          passiva\"\n          />\n        </li>\n      </ol>\n      <p>\n        Se você atingir 100 de CAS, ficará <span class=\"yellow\"\n          >silenciado por 5s</span\n        >\n        e todos os ataques normais sairão duas vezes, são raros os momentos em que\n        isso é útil. Um exemplo é <TextModal\n          text=\"durante\n      a Wickeline.\"\n        >\n          <Video\n            autoplay\n            src=\"resources/habilidades/passiva/silence.mp4\"\n            caption=\"Embriagada durante Wickeline\"\n          />\n        </TextModal>\n      </p>\n      <div class=\"flex\">\n        <Video\n          src=\"resources/habilidades/passiva/AA1.mp4\"\n          caption=\"Ataque normal\"\n        />\n        <Video\n          src=\"resources/habilidades/passiva/AA2.mp4\"\n          caption=\"Ataque bêbada\"\n        />\n        <Video\n          src=\"resources/habilidades/passiva/AA3.mp4\"\n          caption=\"Ataque alcoolizada\"\n        />\n        <Video\n          src=\"resources/habilidades/passiva/AA4.mp4\"\n          caption=\"Ataque embriagada\"\n        />\n      </div>\n      <p>\n        <b class=\"yellow\"\n          >É muito importante não cancelar o segundo ataque da passiva, ele\n          depende da sua velocidade de ataque e é cancelado por movimentação ou\n          uso de habilidades.</b\n        >\n      </p>\n      <div class=\"flex\">\n        <Video src=\"resources/habilidades/passiva/wqtqtqt.mp4\" caption=\"✓\" />\n        <Video src=\"resources/habilidades/passiva/wqaqaqa.mp4\" caption=\"✗\" />\n      </div>\n      <p>\n        Consumir bebidas alcóolicas dá\n        <TextModal text=\"bonus considerável de velocidade de ataque\">\n          <div class=\"flex\">\n            <Video\n              src=\"resources/habilidades/passiva/SadDailin.mp4\"\n              autoplay\n              caption=\"Normal\"\n            />\n            <Video\n              src=\"resources/habilidades/passiva/HappyDailin.mp4\"\n              autoplay\n              caption=\"Com bebida\"\n            />\n          </div>\n        </TextModal>\n        e é muito importante em builds com pouca velocidade de ataque ou durante\n        Alpha / Omega / Wickeline.\n      </p>\n    </section>\n    <section>\n      <Skill id=\"Q\" />\n      <p>\n        Essa habilidade é a principal mobilidade e a principal fonte de dano da\n        Li Dailin, cada uso dá um dash, e o terceiro dash pode atravessar\n        paredes.\n      </p>\n      <p>Existem alguns detalhes importantes sobre essa habilidade:</p>\n      <div class=\"flex\">\n        <Video\n          width=\"320px\"\n          src=\"resources/habilidades/q/WQTQTQT.mp4\"\n          caption=\"Se a primeira ativação da habilidade foi buffada por alcoolizada,\n            as duas ativações seguintes também serão\"\n        />\n        <Video\n          width=\"320px\"\n          src=\"resources/habilidades/q/QQQ.mp4\"\n          caption=\"Nenhuma das ativações atravessa unidades inimigas, isso é,\n        jogadores, animais, Wickeline, etc\"\n        />\n        <Video\n          width=\"320px\"\n          src=\"resources/habilidades/q/QJavas.mp4\"\n          caption=\"Qualquer atordoamento, empurrão ou enraizamento cancela o dash\"\n        />\n      </div>\n      <p>\n        A diferença entre o <HoverableSkill id=\"Q\" /> buffado e não buffado é um\n        aumento do dano e do alcance do pulo.\n      </p>\n      <div class=\"flex\">\n        <Video src=\"resources/habilidades/q/Q.mp4\" caption=\"Q normal\" />\n        <Video src=\"resources/habilidades/q/WQ.mp4\" caption=\"Q buffado\" />\n      </div>\n    </section>\n    <section>\n      <Skill id=\"W\" />\n      <p>\n        Cada uso dessa habilidade vai te dar 45 de CAS e te deixa imune a\n        ataques básicos durante a animação.\n      </p>\n      <Question>\n        Eu ganho mais mobilidade, mais dano e fico imune a ataque básico... Vou\n        spammar essa skill então!\n      </Question>\n      <Figure\n        height=\"160px\"\n        src=\"resources/habilidades/w/WastedDailin.png\"\n        caption=\"DE DAILIN, Novato.\"\n      />\n\n      <p>\n        É interessante sempre manter a barra acima de 40 CAS, pra caso seja\n        necessário usar uma habilidade buffada imediatamente, mas é preciso\n        controlar o uso pra não se silenciar sem querer.\n      </p>\n      <p>\n        No geral, use <HoverableSkill id=\"W\" /> sempre que seu CAS chegar em <TextModal\n          text=\"40\"\n        >\n          <Figure\n            height=\"48px\"\n            src=\"resources/habilidades/passiva/barra.png\"\n            caption=\"Use o traço branco em baixo da sua barra de mana como referência\"\n          />\n        </TextModal>.\n      </p>\n      <p>\n        Outro detalhe importante, é que cada ataque básico reduz o tempo de\n        recarga de <HoverableSkill id=\"W\" /> em 1s, incluíndo o ataque duplo da passiva\n        <HoverableSkill id=\"T\" />.\n      </p>\n    </section>\n    <section>\n      <Skill id=\"E\" />\n      <p>\n        Esse é o famigerado silence da Li Dailin, a habilidade também dá\n        lentidão, mas na maioria das vezes é usada pelo silenciamento.\n      </p>\n      <p>\n        Pra silenciar é necessário usar a skill buffada, e ela tem um tempo de\n        conjuração relativamente alto, então pense bem antes de usa-la pra fugir\n        ou perseguir alguém.\n      </p>\n      <p>\n        O momento ideal pra usar o silenciamento varia muito do momento e da\n        match up, e será abordado mais pra frente no guia.\n      </p>\n      <p>\n        Nem todo tipo de conjuração é cancelado pelo silence, varia habilidade\n        por habilidade.\n      </p>\n      <div class=\"flex\">\n        <Video\n          src=\"resources/habilidades/e/EJavas.mp4\"\n          caption=\"Silence no dash do Javali\"\n        />\n        <Video\n          src=\"resources/habilidades/e/EAlpha.mp4\"\n          caption=\"Silence no knockback do Alpha\"\n        />\n      </div>\n    </section>\n    <section>\n      <Skill id=\"R\" />\n      <p>\n        A ultimate da Li Dailin é um dash que suprime o alvo por 0.7s (1.2s se\n        alcoolizada).\n      </p>\n      <p>\n        O dano da habilidade aumenta conforme a vida perdida, mas não é baseado\n        na vida máxima do alvo.\n      </p>\n      <p>Observações importantes:</p>\n      <ol>\n        <li>O dash atravessa paredes.</li>\n        <li>\n          O cooldown é bem alto (180/150/115s), mas é reduzido em 40% se acertar\n          um alvo.\n        </li>\n        <li>\n          <TextModal text=\"A Li Dailin fica imparável durante o dash\">\n            <Video\n              src=\"resources/habilidades/r/RAlpha2.mp4\"\n              caption=\"A Li Dailin fica imparável durante o dash\"\n            />\n          </TextModal>\n        </li>\n        <li>\n          <TextModal text=\"A Li Dailin não fica imparável durante a supressão\">\n            <Video\n              src=\"resources/habilidades/r/RAlpha1.mp4\"\n              caption=\"A Li Dailin não fica imparável durante a supressão\"\n            />\n          </TextModal>\n        </li>\n        <li>\n          <TextModal text=\"O hitbox é estranho\">\n            <Video\n              src=\"resources/habilidades/r/RAlpha3.mp4\"\n              caption=\"O hitbox é estranho\"\n            />\n          </TextModal>\n        </li>\n      </ol>\n    </section>\n    <section>\n      <Skill id=\"DG\" />\n      <p>\n        É uma habilidade target, não interrompível, que funciona como um ataque\n        básico normal, mas com dano aumentado e causa dano verdadeiro adicional.\n      </p>\n      <p>\n        Não existe um momento certo pra usar ela, recomendo usar sempre que sair\n        do cooldown ou para garantir um last hit.\n      </p>\n      <p>\n        Obs: o alcance dessa habilidade é maior que o alcance padrão de ataque\n        básico, então ela dá um pequeno dash.\n      </p>\n    </section>\n    <section>\n      <Skill id=\"DN\" />\n      <p>\n        São bem raras as situações em que é possível carregar o stun e ainda\n        assim acertar o alvo, pois é possível ouvir o Nunchaku sendo carregado\n        de muito longe.\n      </p>\n      <p>\n        Então, no geral é utilizado como um pequeno dano adicional no combo,\n        para finalizar kills à distância ou para farmar.\n      </p>\n    </section>\n  </section>\n  <section>\n    <h1>Combos</h1>\n    <Question\n      >Tá, eu já entendi as habilidades, mas você pode me falar logo como eu\n      combo?</Question\n    >\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <Figure src=\"resources/combos/Well.jpg\" />\n    <p>\n      Como eu falei antes, é o bom aproveitamento da passiva que define quanto\n      dano você pode causar, então não existe um combo certo ou errado, tudo é\n      situacional.\n    </p>\n    <p>\n      Numa situacão perfeita, o combo com o maior dano é aquele que maximiza o\n      uso da passiva, por exemplo:\n    </p>\n    <Video src=\"resources/combos/Combo.mp4\" />\n    <br />\n    <Combo\n      size={48}\n      skills={[\n        \"W\",\n        \"W\",\n        \"DG\",\n        \"T\",\n        \"Q\",\n        \"T\",\n        \"Q\",\n        \"T\",\n        \"W\",\n        \"T\",\n        \"Q\",\n        \"T\",\n        \"E\",\n        \"T\",\n        \"R\",\n        \"T\",\n        \"DG\",\n      ]}\n    />\n    <p>\n      No entanto o seu inimigo não é um boneco de treino. Então na maioria das\n      vezes você vai ser obrigado a desperdiçar uma passiva ou outra, ou vai ter\n      alguma habilidade interrompida.\n    </p>\n    <p>\n      O combo mostrado acima é apenas um exemplo de aproveitamento da passiva,\n      não se limite a ele. Situações diferentes vão exigir combos diferentes e\n      saber se adaptar é absolutamente necessário.\n    </p>\n    <p>\n      Mas não se preocupe, você não vai ter que lutar 10x contra o mesmo\n      personagem pra aprender os combos apropriados, mais pra frente no guia eu\n      vou explicar como agir em cada um dos match ups.\n    </p>\n  </section>\n  <section>\n    <h1><strike>Builds</strike> Stats</h1>\n    <p>\n      Esse guia não vai ter uma seção de builds. Use o buscador de planos dentro\n      do jogo ou procure no canal de texto de builds no discord <a\n        href=\"https://discord.gg/K3H5V3h6Xk\">Hotel de Lumia</a\n      >.\n    </p>\n    <Question author=\"PROCURANDO BUILD, Novato.\">\n      <img src=\"resources/stats/scammed.gif\" alt=\"Emote SCAM\" />\n    </Question>\n    <Answer>\n      Calma, eu posso explicar <img\n        style=\"vertical-align: middle;\"\n        src=\"resources/stats/D.png\"\n        alt=\"Emote D:\"\n      />\n    </Answer>\n    <p>\n      Eu poderia fazer guias separados pra cada uma das builds possíveis de Li\n      Dailin, mas eu tenho bons motivos para não fazer isso:\n    </p>\n    <ul>\n      <li>Li Dailin tem muita build.</li>\n      <li>\n        Eu tenho pouco tempo <strike\n          ><small>(talvez isso seja mentira)</small></strike\n        >.\n      </li>\n    </ul>\n    <p>\n      Mas tendo uma visão geral sobre quais stats devem ser priorizados e como\n      eles afetam o estilo de jogo, você pode pesquisar builds dentro do jogo e\n      decidir por conta própria quais usar.\n    </p>\n    <h2>Stats ofensivos</h2>\n    <ul>\n      <li>\n        Poder de Ataque: aumenta o dano dos ataques básicos e habilidades.\n      </li>\n      <li>\n        Chance/Dano Crítico: é interessante em builds <TooltipText\n          text=\"glass cannon\"\n          tip=\"Build que sacrifica defesa pra ter mais dano\"\n        /> e é eficiente contra alvos com pouca defesa.\n      </li>\n      <li>\n        Dano Extra de Ataque Básico: aumenta o dano dos ataques básicos\n        ignorando defesa, é interessante em builds mais tanks, e é eficiente\n        contra alvos com muita defesa.\n      </li>\n    </ul>\n    <h2>Stats defensivos</h2>\n    <ul>\n      <li>\n        Defesa: é bom contra danos que não ignoram armadura <small>(duh)</small\n        >.\n      </li>\n      <li>\n        Vida: é bom contra Dano Extra de Ataque Básico, Dano Extra de\n        Habilidade, Armadilhas e Dano Verdadeiro.\n      </li>\n      <li>\n        Roubo de vida + <HoverableSkill id=\"T\" /> =\n        <img\n          style=\"vertical-align: middle; height: 1.7em;\"\n          src=\"resources/stats/dailinSmile.png\"\n          alt=\"Emote Li Dailin Sorrindo\"\n        />.\n      </li>\n    </ul>\n    <p>\n      Obs: o interessante é ter um equilibrio entre Vida e Defesa, por exemplo:\n      +300 de Vida e +40 de defesa\n    </p>\n    <h2>Stats úteis</h2>\n    <ul>\n      <li>\n        Velocidade de movimento: quanto mais velocidade, menos você depende do\n        seu <HoverableSkill id=\"Q\" /> pra se aproximar, e mais você pode aproveitar\n        a passiva.\n      </li>\n      <li>\n        Redução de Tempo de Recarga: menos tempo de recarga, mais skills, mais\n        mobilidade, mais passivas.\n      </li>\n      <li>\n        Visão: Ter mais visão ajuda a abusar da mobilidade e do burst pra fugir\n        ou dar third-party.\n      </li>\n    </ul>\n    <h2>Stats situacionais</h2>\n    <ul>\n      Velocidade de ataque: é interessante ter pelo menos 1.0 de velocidade de\n      ataque. Na Luva não é necessário fazer itens de velocidade de ataque, no\n      Nunchaku 20~30% é suficiente.\n    </ul>\n    <h2>Outros stats</h2>\n    <ul>\n      <li>\n        Dano Extra de Habilidade: Esse stat é interessante em personagens com\n        muitos hits de habilidade, a Li Dailin num combo completo tem só 8 hits,\n        então no geral é um stat desnecessário.\n      </li>\n      <li>\n        Dano de Habilidade: Apesar de forte, a Li Dailin se beneficia mais de\n        itens de poder de ataque, e pouquissimos itens tem ambos os stats, um\n        exemplo de item bom é Vingança de Goujian.\n      </li>\n      <li>\n        Alcance de ataque: É um stat interessante e relativamente útil, mas que\n        não vale a pena ir atrás. E no caso do Nunchaku, ele já está presente no\n        Cerberus e é um passivo único.\n      </li>\n    </ul>\n    <Question>Tá, mas como eu sei que uma build é boa?</Question>\n    <Answer>\n      No geral, se ela prioriza stat ofensivo, faz stat defensivo e um pouco de\n      stat útil, é uma boa build. Stats que não foram citados são pouco\n      relevantes ou irrelevantes.\n    </Answer>\n  </section>\n  <section>\n    <h1>Match ups</h1>\n    <p>Em construção</p>\n  </section>\n  <section>\n    <h1>Streams</h1>\n    <p>\n      O melhor jeito de aprender Eternal é assistindo, e com Li Dailin não é\n      diferente, segue a lista de streams que eu recomendo:\n    </p>\n    <ul>\n      <li><a href=\"https://www.twitch.tv/qhrudwkd777\">트백</a></li>\n      <li><a href=\"https://www.twitch.tv/bi9sean55\">BigSean</a></li>\n      <li><a href=\"https://www.twitch.tv/lnerotv\">lNeroTV</a></li>\n      <li><a href=\"https://www.twitch.tv/shuvisenpai\">ShuviSenpai</a></li>\n      <li>\n        <a href=\"https://www.twitch.tv/uemaaaaa\">uemaaaaa</a>\n        <small>(De vez em nunca eu streamo)</small>\n      </li>\n    </ul>\n  </section>\n</div>\n\n<style>\n  :root {\n    --yellow: #fccd33;\n    --green: #49fc33;\n  }\n\n  .yellow {\n    color: #fccd33;\n  }\n\n  h1,\n  h2 {\n    color: var(--yellow);\n    text-transform: uppercase;\n    font-weight: 100;\n  }\n\n  iframe {\n    max-width: 100%;\n    display: block;\n    margin: 1em auto;\n  }\n\n  a[href] {\n    color: var(--yellow);\n  }\n\n  li {\n    margin-top: 8px;\n  }\n\n  .flex {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    vertical-align: middle;\n  }\n\n  .container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","global","self","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","toString","call","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","Headers","headers","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","Error","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","hasOwnProperty","thisArg","values","entries","methods","Request","input","method","upcased","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","module","BASE_API_PATH","validPattern","validRegex","RegExp","validatePath","namespace","validName","path","validateTuple","finalize","res","includes","crossfetch","amount","params","encodeURIComponent","queryParams","page","hit","window","prompt","caption","height","width","color","author","levels","updates","to_null_out","accounted_for","n","spread_props","size","icon","description","id","skill","skills","show","tip","video","controls","autoplay","muted","loop","preload","loading","paused","play","pause","countapi","visits","console","log"],"mappings":"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"}